name: workflow

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  basic-builds:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        name: [
          "windows-py38",
          "macos-py37",
          "ubuntu-py36",
        ]
        include:
          - name: "windows-py38"
            os: windows-latest
            python-version: 3.8
          - name: "macos-py37"
            os: macos-latest
            python-version: 3.7
          - name: "ubuntu-py36"
            os: ubuntu-latest
            python-version: 3.6
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install cython --install-option="--no-cython-compile"
      - name: Install
        run: |
          python -m pip install --no-cache-dir -r requirements-dev.txt
      - name: Run tests
        run: |
          invoke test
  integrated-build:
    name: ubuntu-py38-integrated
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Set up docker containers
        run: |
          docker run -p 19997:19997 --name vrep_rfl -d gramaziokohler/vrep-rfl
          docker-compose -f "docs/backends/files/ur5-demo/docker-compose.yml" up -d --build
          docker ps -a
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install cython --install-option="--no-cython-compile"
      - name: Install
        run: |
          python -m pip install --no-cache-dir -r requirements-dev.txt
      - name: Run linter
        run: |
          invoke lint
      - name: Run integration test
        run: |
          invoke test --doctest --codeblock
      - name: Tear down docker containers
        run: |
          docker-compose -f "docs/backends/files/ur5-demo/docker-compose.yml" down
          docker rm -f vrep_rfl
      - name: Generate docs
        if: ${{ success() }}
        run: |
          invoke docs
  ironpython-build:
    name: windows-ironpython
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setting IronPython path
          run: echo "::set-env name=IRONPYTHONPATH::$env:GITHUB_WORKSPACE/src"
      - name: Install dependencies
        run: |
          choco install ironpython --version=2.7.8.1
          ipy -X:Frames -m ensurepip
          ipy -X:Frames -m pip install --no-deps compas roslibpy
          ipy -X:Frames -m pip install ironpython-pytest
      - name: Run tests
        run: |
          ipy tests/ipy_test_runner.py
